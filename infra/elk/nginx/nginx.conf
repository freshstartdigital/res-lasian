events {
    worker_connections  1024;
}

http {
    server {
        listen 80;
        server_name your-domain.com;

        location / {
            proxy_pass http://kibana:5601;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Redirect from HTTP to HTTPS (optional)
    # Uncomment the following lines if you have SSL set up
    # server {
    #     listen 80;
    #     server_name your-domain.com;
    #     return 301 https://$host$request_uri;
    # }

    # HTTPS server configuration (optional)
    # Uncomment and update the following lines if you have SSL set up
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;

    #     ssl_certificate /etc/nginx/certs/your-domain.com.crt;
    #     ssl_certificate_key /etc/nginx/certs/your-domain.com.key;

    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_prefer_server_ciphers on;
    #     ssl_dhparam /etc/nginx/certs/dhparam.pem;
    #     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    #     location / {
    #         proxy_pass http://kibana:5601;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    # }
}
